<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.hawile.mapper.CsrMapper">
  <resultMap id="BaseResultMap" type="top.hawile.entity.Csr">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="vpn_name" jdbcType="VARCHAR" property="vpnName" />
    <result column="ftp_name" jdbcType="VARCHAR" property="ftpName" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="create_date" jdbcType="VARCHAR" property="createDate" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
      id, vpn_name, ftp_name, `name`, create_date, `path`, `state`, remark, update_time
    from csr
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from csr
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="top.hawile.entity.Csr">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into csr (vpn_name, ftp_name, `name`, 
      create_date, `path`, `state`, 
      remark, update_time)
    values (#{vpnName,jdbcType=VARCHAR}, #{ftpName,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="top.hawile.entity.Csr">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into csr
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="vpnName != null">
        vpn_name,
      </if>
      <if test="ftpName != null">
        ftp_name,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="path != null">
        `path`,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="vpnName != null">
        #{vpnName,jdbcType=VARCHAR},
      </if>
      <if test="ftpName != null">
        #{ftpName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.hawile.entity.Csr">
    update csr
    <set>
      <if test="vpnName != null">
        vpn_name = #{vpnName,jdbcType=VARCHAR},
      </if>
      <if test="ftpName != null">
        ftp_name = #{ftpName,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        `path` = #{path,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.hawile.entity.Csr">
    update csr
    set vpn_name = #{vpnName,jdbcType=VARCHAR},
      ftp_name = #{ftpName,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=VARCHAR},
      `path` = #{path,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select
      id, vpn_name, ftp_name, `name`, create_date, `path`, `state`, remark, update_time
    from csr
  </select>
</mapper>