<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.hawile.mapper.ContactMapper">
  <resultMap id="BaseResultMap" type="top.hawile.entity.Contact">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="trade_name" jdbcType="VARCHAR" property="tradeName" />
    <result column="device" jdbcType="VARCHAR" property="device" />
    <result column="contacts" jdbcType="VARCHAR" property="contacts" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
      id, trade_name, device, contacts, `number`, email, qq, remark, update_time
    from contact
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from contact
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="top.hawile.entity.Contact">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into contact (trade_name, device, contacts, 
      `number`, email, qq, 
      remark, update_time)
    values (#{tradeName,jdbcType=VARCHAR}, #{device,jdbcType=VARCHAR}, #{contacts,jdbcType=VARCHAR}, 
      #{number,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="top.hawile.entity.Contact">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into contact
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tradeName != null">
        trade_name,
      </if>
      <if test="device != null">
        device,
      </if>
      <if test="contacts != null">
        contacts,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tradeName != null">
        #{tradeName,jdbcType=VARCHAR},
      </if>
      <if test="device != null">
        #{device,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null">
        #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.hawile.entity.Contact">
    update contact
    <set>
      <if test="tradeName != null">
        trade_name = #{tradeName,jdbcType=VARCHAR},
      </if>
      <if test="device != null">
        device = #{device,jdbcType=VARCHAR},
      </if>
      <if test="contacts != null">
        contacts = #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        `number` = #{number,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.hawile.entity.Contact">
    update contact
    set trade_name = #{tradeName,jdbcType=VARCHAR},
      device = #{device,jdbcType=VARCHAR},
      contacts = #{contacts,jdbcType=VARCHAR},
      `number` = #{number,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select
      id, trade_name, device, contacts, `number`, email, qq, remark, update_time
    from contact
  </select>
  <select id="selectId" resultMap="BaseResultMap">
    select
      id, trade_name, device, contacts, `number`, email, qq, remark, update_time
    from contact
    where id in
    <foreach collection="array" item="id" open="(" close=")" separator=",">#{id}</foreach>
  </select>
</mapper>