<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.hawile.mapper.WorkMapper">
  <resultMap id="BaseResultMap" type="top.hawile.entity.Work">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="dept" jdbcType="VARCHAR" property="dept" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="date" jdbcType="VARCHAR" property="date" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
      id, `name`, dept, content, `date`, update_time
    from work
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from work
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="top.hawile.entity.Work">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into work (`name`, dept, content, 
      `date`, update_time)
    values (#{name,jdbcType=VARCHAR}, #{dept,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{date,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="top.hawile.entity.Work">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into work
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="dept != null">
        dept,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="date != null">
        `date`,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="dept != null">
        #{dept,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.hawile.entity.Work">
    update work
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="dept != null">
        dept = #{dept,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        `date` = #{date,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.hawile.entity.Work">
    update work
    set `name` = #{name,jdbcType=VARCHAR},
      dept = #{dept,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      `date` = #{date,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectDate" resultMap="BaseResultMap">
    select id, `name`, dept, content, `date`, update_time
    from work where `date` >= #{beginDate,jdbcType=VARCHAR} and `date` &lt;= #{endDate,jdbcType=VARCHAR} order by `date`
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, `name`, dept, content, `date`, update_time
    from work order by `date` desc
  </select>
</mapper>