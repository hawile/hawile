<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.hawile.mapper.AtmMapper">
  <resultMap id="BaseResultMap" type="top.hawile.entity.Atm">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="date" jdbcType="VARCHAR" property="date" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="total" jdbcType="DOUBLE" property="total" />
    <result column="total2" jdbcType="DOUBLE" property="total2" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="factory_total" jdbcType="DOUBLE" property="factoryTotal" />
    <result column="factory_number" jdbcType="INTEGER" property="factoryNumber" />
    <result column="factory_profit" jdbcType="DOUBLE" property="factoryProfit" />
    <result column="headoffice_total" jdbcType="DOUBLE" property="headofficeTotal" />
    <result column="headoffice_number" jdbcType="INTEGER" property="headofficeNumber" />
    <result column="headoffice_profit" jdbcType="DOUBLE" property="headofficeProfit" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
      id, `date`, `name`, `number`, total, total2, remark, `state`, factory_total, factory_number,
      factory_profit, headoffice_total, headoffice_number, headoffice_profit, update_time
    from atm
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from atm
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="top.hawile.entity.Atm">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into atm (`date`, `name`, `number`, 
      total, total2, remark, 
      `state`, factory_total, factory_number, 
      factory_profit, headoffice_total, headoffice_number, 
      headoffice_profit, update_time)
    values (#{date,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER}, 
      #{total,jdbcType=DOUBLE}, #{total2,jdbcType=DOUBLE}, #{remark,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{factoryTotal,jdbcType=DOUBLE}, #{factoryNumber,jdbcType=INTEGER}, 
      #{factoryProfit,jdbcType=DOUBLE}, #{headofficeTotal,jdbcType=DOUBLE}, #{headofficeNumber,jdbcType=INTEGER}, 
      #{headofficeProfit,jdbcType=DOUBLE}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="top.hawile.entity.Atm">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into atm
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="date != null">
        `date`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="total2 != null">
        total2,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="factoryTotal != null">
        factory_total,
      </if>
      <if test="factoryNumber != null">
        factory_number,
      </if>
      <if test="factoryProfit != null">
        factory_profit,
      </if>
      <if test="headofficeTotal != null">
        headoffice_total,
      </if>
      <if test="headofficeNumber != null">
        headoffice_number,
      </if>
      <if test="headofficeProfit != null">
        headoffice_profit,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="date != null">
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        #{total,jdbcType=DOUBLE},
      </if>
      <if test="total2 != null">
        #{total2,jdbcType=DOUBLE},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="factoryTotal != null">
        #{factoryTotal,jdbcType=DOUBLE},
      </if>
      <if test="factoryNumber != null">
        #{factoryNumber,jdbcType=INTEGER},
      </if>
      <if test="factoryProfit != null">
        #{factoryProfit,jdbcType=DOUBLE},
      </if>
      <if test="headofficeTotal != null">
        #{headofficeTotal,jdbcType=DOUBLE},
      </if>
      <if test="headofficeNumber != null">
        #{headofficeNumber,jdbcType=INTEGER},
      </if>
      <if test="headofficeProfit != null">
        #{headofficeProfit,jdbcType=DOUBLE},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.hawile.entity.Atm">
    update atm
    <set>
      <if test="date != null">
        `date` = #{date,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        `number` = #{number,jdbcType=INTEGER},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=DOUBLE},
      </if>
      <if test="total2 != null">
        total2 = #{total2,jdbcType=DOUBLE},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=VARCHAR},
      </if>
      <if test="factoryTotal != null">
        factory_total = #{factoryTotal,jdbcType=DOUBLE},
      </if>
      <if test="factoryNumber != null">
        factory_number = #{factoryNumber,jdbcType=INTEGER},
      </if>
      <if test="factoryProfit != null">
        factory_profit = #{factoryProfit,jdbcType=DOUBLE},
      </if>
      <if test="headofficeTotal != null">
        headoffice_total = #{headofficeTotal,jdbcType=DOUBLE},
      </if>
      <if test="headofficeNumber != null">
        headoffice_number = #{headofficeNumber,jdbcType=INTEGER},
      </if>
      <if test="headofficeProfit != null">
        headoffice_profit = #{headofficeProfit,jdbcType=DOUBLE},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.hawile.entity.Atm">
    update atm
    set `date` = #{date,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      `number` = #{number,jdbcType=INTEGER},
      total = #{total,jdbcType=DOUBLE},
      total2 = #{total2,jdbcType=DOUBLE},
      remark = #{remark,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=VARCHAR},
      factory_total = #{factoryTotal,jdbcType=DOUBLE},
      factory_number = #{factoryNumber,jdbcType=INTEGER},
      factory_profit = #{factoryProfit,jdbcType=DOUBLE},
      headoffice_total = #{headofficeTotal,jdbcType=DOUBLE},
      headoffice_number = #{headofficeNumber,jdbcType=INTEGER},
      headoffice_profit = #{headofficeProfit,jdbcType=DOUBLE},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select
      id, `date`, `name`, `number`, total, total2, remark, `state`, factory_total, factory_number,
      factory_profit, headoffice_total, headoffice_number, headoffice_profit, update_time
    from atm
  </select>
  <select id="selectId" resultMap="BaseResultMap">
    select
      id, `date`, `name`, `number`, total, total2, remark, `state`, factory_total, factory_number,
      factory_profit, headoffice_total, headoffice_number, headoffice_profit, update_time
    from atm
    where id in
    <foreach collection="array" item="id" open="(" close=")" separator=",">#{id}</foreach>
  </select>
</mapper>