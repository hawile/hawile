<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.hawile.mapper.GoodsMapper">
  <resultMap id="BaseResultMap" type="top.hawile.entity.Goods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="specs" jdbcType="VARCHAR" property="specs" />
    <result column="pcs" jdbcType="VARCHAR" property="pcs" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="price2" jdbcType="DOUBLE" property="price2" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
      id, `name`, specs, pcs, price, price2, remark, update_time
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="top.hawile.entity.Goods">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into goods (`name`, specs, pcs, 
      price, price2, remark, update_time)
    values (#{name,jdbcType=VARCHAR}, #{specs,jdbcType=VARCHAR}, #{pcs,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{price2,jdbcType=DOUBLE},
      #{remark,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="top.hawile.entity.Goods">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="specs != null">
        specs,
      </if>
      <if test="pcs != null">
        pcs,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="price2 != null">
        price2,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="specs != null">
        #{specs,jdbcType=VARCHAR},
      </if>
      <if test="pcs != null">
        #{pcs,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="price2 != null">
        #{price2,jdbcType=DOUBLE},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.hawile.entity.Goods">
    update goods
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="specs != null">
        specs = #{specs,jdbcType=VARCHAR},
      </if>
      <if test="pcs != null">
        pcs = #{pcs,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="price2 != null">
        price2 = #{price2,jdbcType=DOUBLE},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.hawile.entity.Goods">
    update goods
    set `name` = #{name,jdbcType=VARCHAR},
      specs = #{specs,jdbcType=VARCHAR},
      pcs = #{pcs,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      price2 = #{price2,jdbcType=DOUBLE},
      remark = #{remark,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select
      id, `name`, specs, pcs, price, price2, remark, update_time
    from goods
  </select>
</mapper>