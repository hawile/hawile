<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.hawile.mapper.SoftAppMapper">
  <resultMap id="BaseResultMap" type="top.hawile.entity.SoftApp">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="path" jdbcType="VARCHAR" property="path" />
    <result column="size" jdbcType="INTEGER" property="size" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
      id, `name`, version, reason, `path`, `size`, update_time
    from soft_app
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from soft_app
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="top.hawile.entity.SoftApp">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into soft_app (`name`, version, reason, 
      `path`, `size`, update_time
      )
    values (#{name,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, 
      #{path,jdbcType=VARCHAR}, #{size,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="top.hawile.entity.SoftApp">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into soft_app
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="path != null">
        `path`,
      </if>
      <if test="size != null">
        `size`,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.hawile.entity.SoftApp">
    update soft_app
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="path != null">
        `path` = #{path,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        `size` = #{size,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.hawile.entity.SoftApp">
    update soft_app
    set `name` = #{name,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      `path` = #{path,jdbcType=VARCHAR},
      `size` = #{size,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select
      id, `name`, version, reason, `path`, `size`, update_time
    from soft_app
  </select>
</mapper>