<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.hawile.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="top.hawile.entity.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="symbol" jdbcType="VARCHAR" property="symbol" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="menu_id" jdbcType="INTEGER" property="menuId" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="href" jdbcType="VARCHAR" property="href" />
  </resultMap>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
      id, `name`, symbol, parent_id, menu_id, sort, icon, href
    from role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="top.hawile.entity.Role">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into role (`name`, symbol, parent_id, 
      menu_id, sort, icon, 
      href)
    values (#{name,jdbcType=VARCHAR}, #{symbol,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, 
      #{menuId,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{icon,jdbcType=VARCHAR}, 
      #{href,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="top.hawile.entity.Role">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="symbol != null">
        symbol,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="menuId != null">
        menu_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="href != null">
        href,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="symbol != null">
        #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="menuId != null">
        #{menuId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="href != null">
        #{href,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.hawile.entity.Role">
    update role
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="symbol != null">
        symbol = #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="menuId != null">
        menu_id = #{menuId,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="href != null">
        href = #{href,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.hawile.entity.Role">
    update role
    set `name` = #{name,jdbcType=VARCHAR},
      symbol = #{symbol,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      menu_id = #{menuId,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      icon = #{icon,jdbcType=VARCHAR},
      href = #{href,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap">
    select
      id, `name`, symbol, parent_id, menu_id, sort, icon, href
    from role order by sort,parent_id
  </select>
  <select id="menuByUser0" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
      r.id, `name`, symbol, parent_id, menu_id, sort, icon, href
    from role r left join role_to_user rtu on r.id = rtu.role_id
    where rtu.user_id = #{userId,jdbcType=INTEGER} and rtu.value = 1
    and menu_id = 0
    order by sort,parent_id
  </select>
  <select id="menuByUser1" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
      r.id, `name`, symbol, parent_id, menu_id, sort, icon, href
    from role r left join role_to_user rtu on r.id = rtu.role_id
    where rtu.user_id = #{userId,jdbcType=INTEGER} and rtu.value = 1
      and menu_id = 1 and parent_id = #{roleId,jdbcType=INTEGER}
    order by sort,parent_id
  </select>
  <select id="selectMenu" resultMap="BaseResultMap">
    select
      id, `name`, symbol, parent_id, menu_id, sort, icon, href
    from role where menu_id = 1 or menu_id = 0
    order by sort,parent_id
  </select>
</mapper>